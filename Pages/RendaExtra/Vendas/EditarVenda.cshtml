@page "{id:int}"
@model ControleFinanceiroApp.Pages.RendaExtra.Vendas.EditarVendaModel
@{
    ViewData["Title"] = "Editar Venda/Dívida";
}

<div class="container mt-4">
    <h1>@ViewData["Title"]</h1>
    <h4>Venda #@Model.VendaOriginal.Id</h4>
    <p>
        Use este formulário para corrigir dados cadastrais. 
        @if (!Model.PodeEditarValores)
        {
            <span class="text-danger fw-bold">Não é possível editar o Valor e Parcelas, pois já existem pagamentos registrados.</span>
        }
    </p>
    
    <hr />
    
    @if (ViewData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@ViewData["ErrorMessage"]</div>
    }

    <div class="row">
        <div class="col-md-6">
            <form method="post">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                
                <input type="hidden" asp-for="VendaId" /> <input type="hidden" asp-for="DataVendaOriginal" /> <div class="mb-3">
                    <label asp-for="NomeComprador" class="form-label"></label>
                    <input asp-for="NomeComprador" class="form-control" />
                    <span asp-validation-for="NomeComprador" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="ValorTotal" class="form-label"></label>
                    @if (Model.PodeEditarValores)
                    {
                        <input asp-for="ValorTotal" class="form-control" type="text" inputmode="decimal" data-val="true" data-val-number="O campo Valor Total deve ser um número." />
                    }
                    else
                    {
                        <input asp-for="ValorTotal" class="form-control" type="text" inputmode="decimal" readonly="readonly" data-val="true" data-val-number="O campo Valor Total deve ser um número." />
                        <small class="text-muted">Somente leitura após o primeiro pagamento.</small>
                    }
                    <span asp-validation-for="ValorTotal" class="text-danger"></span>
                </div>
                
                <div class="mb-3">
                    <label asp-for="NumeroParcelas" class="form-label"></label>
                    @if (Model.PodeEditarValores)
                    {
                        <input asp-for="NumeroParcelas" class="form-control" type="number" />
                    }
                    else
                    {
                        <input asp-for="NumeroParcelas" class="form-control" type="number" readonly="readonly" />
                        <small class="text-muted">Somente leitura após o primeiro pagamento.</small>
                    }
                    <span asp-validation-for="NumeroParcelas" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="ValorPrimeiraParcela" class="form-label"></label>
                    @if (Model.PodeEditarValores)
                    {
                        <input asp-for="ValorPrimeiraParcela" class="form-control" type="text" inputmode="decimal" data-val-number="O campo deve ser um número." />
                        <small class="text-muted">Deixe 0 ou em branco para que o sistema recalcule todas as parcelas igualmente.</small>
                    }
                    else
                    {
                        <input asp-for="ValorPrimeiraParcela" class="form-control" type="text" inputmode="decimal" readonly="readonly" />
                        <small class="text-muted">Este valor está fixo após o primeiro pagamento.</small>
                    }
                    <span asp-validation-for="ValorPrimeiraParcela" class="text-danger"></span>
                </div>


                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">Salvar Alterações</button>
                    <a asp-page="./DevedoresIndex" class="btn btn-secondary">Cancelar</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            // Script para garantir que vírgulas sejam tratadas como pontos no envio (ValorTotal)
            $("#ValorTotal").on("input", function () { 
                let value = $(this).val();
                value = value.replace(",", ".");
                $(this).val(value);
            });
            // Script para garantir que vírgulas sejam tratadas como pontos no envio (ValorPrimeiraParcela)
            $("#ValorPrimeiraParcela").on("input", function () { 
                let value = $(this).val();
                value = value.replace(",", ".");
                $(this).val(value);
            });
        });
    </script>
}